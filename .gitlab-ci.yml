image: docker:19.03.12
services:
  - docker:19.03.12-dind
stages:
  - build
  - test
  - release
  - deploy
variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

test:
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE

release-image:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master

deploy_docker:
  stage: deploy
  before_script:
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apk --update add openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$PROD_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  script:
    - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@$PROD_SERVER_IP "docker pull $CONTAINER_RELEASE_IMAGE && docker stop \$(docker ps -aq) && docker rm \$(docker ps -aq) && docker run -d --restart=unless-stopped -p $PROD_SERVER_PORT:80 $CONTAINER_RELEASE_IMAGE"
  only:
    - master
  when: manual

deploy_staging:
  stage: deploy
  before_script:
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apk --update add openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$STAGING_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - 'which rsync || ( apk --update add rsync )'
  script:
    - rsync -ravh --exclude-from="./.dockerignore" -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" --delete ./ $STAGING_SERVER_USERNAME@$STAGING_SERVER_IP:/cygdrive/c/data/nginx/html/